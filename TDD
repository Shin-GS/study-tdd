TDD 기본 전체
 - 레거시 코드에 테스트를 넣는게 TDD는 아니다.
 - 레거시에 테스트를 넣으려면 코드 개선이 필요하다.
 - 커버리지에 집착하면 안된다.
 - 왜 테스트를 해야하고 어떻게 테스트를 해야하는지 고민이 필요하다.
 - TDD를 논하기 전에 테스트가 가능한 구조로 프로젝트가 변경되어야한다.

 *테스트의 목적
  - 회귀 버그 방지
  - 유연한 설계로 개선(테스트를 쉽게 그리고 결정적이게 만들어줌)

TDD 개발 순서
 - RED -> GREEN -> BLUE 단계 무한 반복
 - RED : 깨지는 테스트를 먼저 작성한다.
 - GREEN : 깨지는 테스트를 성공시킨다.
 - BLUE : 리팩토링한다.

TDD 장점
 - 깨지는 테스트를 먼저 작성해야하기 때문에, 인터페이스를 먼저 만드는 것이 강제된다.
   => 개발자는 행동에 집중할 수 있게 된다.
 - 장기적인 관점에서 개발 비용 감소

TDD 단점
 - 초기 개발 비용
 - 난이도